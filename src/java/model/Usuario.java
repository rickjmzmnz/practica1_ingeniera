package model;
import login.Login;
import login.Sesion;
// Generated 1/03/2016 11:02:42 PM by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import java.io.Serializable;
 
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;
import javax.servlet.http.HttpSession;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario"
    ,schema="public"
)
public class Usuario  implements java.io.Serializable {


     private int idUsuario;
     private String correoElectronico;
     private String contraseña;
     private InformacionUsuario informacionUsuario;

    public Usuario() {
    }

	
    public Usuario(int idUsuario, String correoElectronico, String contraseña) {
        this.idUsuario = idUsuario;
        this.correoElectronico = correoElectronico;
        this.contraseña = contraseña;
    }
    public Usuario(int idUsuario, String correoElectronico, String contraseña, InformacionUsuario informacionUsuario) {
       this.idUsuario = idUsuario;
       this.correoElectronico = correoElectronico;
       this.contraseña = contraseña;
       this.informacionUsuario = informacionUsuario;
    }
   
     @Id 

    
    @Column(name="id_usuario", unique=true, nullable=false)
    public int getIdUsuario() {
        return this.idUsuario;
    }
    
    public void setIdUsuario(int idUsuario) {
        this.idUsuario = idUsuario;
    }

    
    @Column(name="correo_electronico", nullable=false, length=100)
    public String getCorreoElectronico() {
        return this.correoElectronico;
    }
    
    public void setCorreoElectronico(String correoElectronico) {
        this.correoElectronico = correoElectronico;
    }

    
    @Column(name="contraseña", nullable=false, length=30)
    public String getContraseña() {
        return this.contraseña;
    }
    
    public void setContraseña(String contraseña) {
        this.contraseña = contraseña;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="usuario")
    public InformacionUsuario getInformacionUsuario() {
        return this.informacionUsuario;
    }
    
    public void setInformacionUsuario(InformacionUsuario informacionUsuario) {
        this.informacionUsuario = informacionUsuario;
    }


 //validate login
    public String validaCorreoContraseña() {
        boolean valid = Login.validar(correoElectronico, contraseña);
        if (valid) {
            HttpSession session = Sesion.getSession();
            session.setAttribute("correo_electronico", correoElectronico);
            return "admin";
        } else {
            FacesContext.getCurrentInstance().addMessage(
                    null,
                    new FacesMessage(FacesMessage.SEVERITY_WARN,
                            "Incorrect Email and Password",
                            "Please enter correct Email and Password"));
            return "login";
        }
    }
 
    //logout event, invalidate session
    public String logout() {
        HttpSession session = Sesion.getSession();
        session.invalidate();
        return "login";
    }

}


